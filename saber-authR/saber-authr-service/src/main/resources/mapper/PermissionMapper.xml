<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fgo.saber.authr.service.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="fgo.saber.authr.service.model.entity.Permission">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="permission_id" jdbcType="BIGINT" property="permissionId" />
	  <result column="app_id" jdbcType="BIGINT" property="appId" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
	  <result column="permission_value" jdbcType="VARCHAR" property="permissionValue" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>

	<resultMap id="AppNameResultMap" type="fgo.saber.authr.service.model.vo.PermissionVO" extends="BaseResultMap">
		<result column="app_name" jdbcType="VARCHAR" property="appName" />
	</resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    permission_id, app_id, permission_name, permission_value, remark, status, create_time, update_time
  </sql>

	<sql id="Alias_Column_List">
		${alias}.permission_id, ${alias}.app_id, ${alias}.permission_name, ${alias}.permission_value, ${alias}.remark, ${alias}.status, ${alias}.create_time, ${alias}.update_time
	</sql>

	<select id="getPermissionNav" resultMap="AppNameResultMap">
		select
		<include refid="Alias_Column_List">
			<property name="alias" value="p"/>
		</include> , ai.app_name
		from permission p
		left join app_info ai on ai.app_id = p.app_id
		<where>
			<if test="permissionName != null &amp; permissionName != ''">
				and p.permission_name like concat('%', #{permissionName} , '%')
			</if>
			<if test="status != null">
				and p.status = #{status}
			</if>

			<if test="appId != null &amp; appId != ''">
				and p.app_id = #{appId}
			</if>
		</where>
	</select>

	<select id="findRolesWithAppAndRoleId" resultMap="BaseResultMap">
		select
		<include refid="Alias_Column_List"><property name="alias" value="p"/></include>
		from permission p
		inner join role_permission rp on rp.permission_id = p.permission_id
		where rp.role_id = #{roleId}
		and p.app_id = #{appId}
		and p.status = 1
	</select>

	<select id="findRolesWithAppAndRoleIds" resultMap="BaseResultMap">
		select
			<include refid="Alias_Column_List"><property name="alias" value="p"/></include>
		from permission p
		inner join role_permission rp on rp.permission_id = p.permission_id
		where p.app_id = #{appId}
		and p.status = 1
		and rp.role_id in
			<foreach collection="roleIds" item="item" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
	</select>

</mapper>