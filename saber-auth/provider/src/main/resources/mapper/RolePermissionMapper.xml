<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fgo.saber.auth.provider.dao.RolePermissionMapper">
  <resultMap id="BaseResultMap" type="fgo.saber.auth.provider.model.entity.RolePermission">
    <id column="role_permission_id" jdbcType="BIGINT" property="rolePermissionId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
  </resultMap>
  <sql id="Base_Column_List">
    role_permission_id, role_id, permission_id, operate_ip, operate_time, operator
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sb_role_permission
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sb_role_permission
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="fgo.saber.auth.provider.model.entity.RolePermission">
    insert into sb_role_permission (role_permission_id, role_id, permission_id, 
      operate_ip, operate_time, operator
      )
    values (#{rolePermissionId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{permissionId,jdbcType=BIGINT}, 
      #{operateIp,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{operator,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="fgo.saber.auth.provider.model.entity.RolePermission">
    insert into sb_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rolePermissionId != null">
        role_permission_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
      <if test="operateIp != null">
        operate_ip,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="operator != null">
        operator,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rolePermissionId != null">
        #{rolePermissionId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="operateIp != null">
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="fgo.saber.auth.provider.model.entity.RolePermission">
    update sb_role_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="operateIp != null">
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
    </set>
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="fgo.saber.auth.provider.model.entity.RolePermission">
    update sb_role_permission
    set role_id = #{roleId,jdbcType=BIGINT},
      permission_id = #{permissionId,jdbcType=BIGINT},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operator = #{operator,jdbcType=VARCHAR}
    where role_permission_id = #{rolePermissionId,jdbcType=BIGINT}
  </update>
</mapper>